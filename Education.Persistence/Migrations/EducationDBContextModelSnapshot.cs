// <auto-generated />
using System;
using Education.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Education.Persistence.Migrations
{
    [DbContext(typeof(EducationDBContext))]
    partial class EducationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Education.Domain.Curso", b =>
                {
                    b.Property<Guid>("CursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Precio")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CursoId");

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            CursoId = new Guid("f687de77-8ee2-4d02-9fab-25557731ccc6"),
                            Descripcion = "Curso C# básico",
                            FechaCreacion = new DateTime(2022, 5, 22, 21, 17, 33, 633, DateTimeKind.Local).AddTicks(4734),
                            FechaPublicacion = new DateTime(2024, 5, 22, 21, 17, 33, 633, DateTimeKind.Local).AddTicks(4760),
                            Precio = 56m,
                            Titulo = "C# desde cero hasta avanzado"
                        },
                        new
                        {
                            CursoId = new Guid("2bf2a8ed-372a-4548-8a1e-4b017e6ad52b"),
                            Descripcion = "Curso de Java",
                            FechaCreacion = new DateTime(2022, 5, 22, 21, 17, 33, 633, DateTimeKind.Local).AddTicks(4839),
                            FechaPublicacion = new DateTime(2024, 5, 22, 21, 17, 33, 633, DateTimeKind.Local).AddTicks(4842),
                            Precio = 25m,
                            Titulo = "Master en Java Spring desde las raices"
                        },
                        new
                        {
                            CursoId = new Guid("00a2eb6d-b1f2-4bc3-b7ad-807f4c42e3b6"),
                            Descripcion = "Curso de Unit Test para Net Core",
                            FechaCreacion = new DateTime(2022, 5, 22, 21, 17, 33, 633, DateTimeKind.Local).AddTicks(4884),
                            FechaPublicacion = new DateTime(2024, 5, 22, 21, 17, 33, 633, DateTimeKind.Local).AddTicks(4886),
                            Precio = 1000m,
                            Titulo = "Master en Unit Test con CQRS"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
